name: CI
on: [push, pull_request]
defaults:
  run:
    shell: pwsh
jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      # MSSQL_AGENT_ENABLED: True
      ACCEPT_EULA: Y
      MSSQL_PID: Developer
      SA_PASSWORD: ${{secrets.SAPASSWORD}}
      TEST_SQLINSTANCE: localhost
    steps:
    - uses: actions/checkout@v2

    #########
    - name: Install Pre-Requisites
      run: |
        # These next two lines are mainly just debugging
        # $PSVersionTable
        # Get-Module -listavailable -Name dbatools,sqlserver,pester,invoke-sqlcmd2
        Set-PSRepository -Name 'PSGallery' -InstallationPolicy 'Trusted'
        Install-Module -Name dbatools -RequiredVersion '1.0.161'
        Install-Module -Name invoke-sqlcmd2 -RequiredVersion '1.6.4'
        # DEBUG: If I check in on development, is GA trying to checkout and test master?
        git branch --show-current
        write-host "DEBUGGING: What branch was that?"

      #########
    - name:  Setup docker container
      run: |
        # create a shared network.
        # I don't know why I need this, but when I try to remove it, the step fails.
        # this doesn't work with windows containers. I suspect that I don't need it at all.
        docker network create localnet
        #
        # create a shared volume
        docker volume create shared
        #
        # setup container and expose port
        Write-Host "INFO:Start the mssql container"
        # Is this mount syntax for linux?  I am trying to run in a windows task runner?
        # Do I even need persistent storage?
        docker run -p 1433:1433 -e ACCEPT_EULA -e SA_PASSWORD -e MSSQL_PID --network localnet --hostname dockersql2017 --name dockersql2017 --mount 'source=shared,target=/shared' -d mcr.microsoft.com/mssql/server:2017-latest

      #########
    - name:  Is MsSql Docker Container OK?
      run: |
        # DEBUGGING: Where are we, exactly? I need the path to the "Get Test info" PS1 files.
        get-childitem .
        #
        Write-Host "INFO:Load Credentials and ServerInstance"
        $cred = .\Tests\Get-TestSqlCredential.ps1
        $ServerInstance = .\Tests\Get-TestSqlInstance.ps1
        #
        Write-Host "INFO:Starting a query to dump out system stuff for troubleshooting"
        $Query = "select 'Try01' as EventName, GETDATE() RightNow, SUSER_SNAME() WhoamI, @@SERVERNAME as ServerName, @@VERSION as SqlServerVersion "
        Invoke-SqlCmd2 -Credential $Cred -ServerInstance $ServerInstance -query $Query

      #########
    - name: Run build.ps1 / Test
      # I am unsure if I 100% understand how this works, it was set up by Plaster
      shell: pwsh
      run: ./build.ps1 -Task Test -Bootstrap

